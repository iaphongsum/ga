-- data set is google_analytics_sample > ga_sessions_ for ecomm 
-- first query

SELECT
date,
channelGrouping as channel,
totals.visits,
totals.transactions,
totals.transactionRevenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_20170801`
WHERE totals.transactions IS NOT NULL
LIMIT 1000

-- 2nd query WHERE xxx in (OO, OO)

SELECT
date,
channelGrouping as channel,
totals.visits,
totals.transactions,
totals.transactionRevenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_20170801`
WHERE channelGrouping in ('Organic Search', 'Direct')
ORDER BY transactionRevenue DESC
LIMIT 1000

-- standard query on google analytics - ecomm

SELECT 
date,
channelGrouping as channel,
sum(totals.visits) as visits,
sum(totals.transactions) as transactions,
sum(totals.transactionRevenue) as revenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_20170801`
WHERE channelGrouping in ('Organic Search','Direct')
GROUP BY date, channel
ORDER BY transactions DESC
LIMIT 1000

-- Using math + CASE statements in BigQuery

SELECT 
date,
channelGrouping AS channel,
sum(totals.visits) AS visits,
CASE WHEN sum(totals.visits) > 0
  THEN sum(totals.transactions)/sum(totals.visits) 
  ELSE 0 END AS con_rate,
sum(totals.transactions) AS transactions,
sum(totals.transactionRevenue) AS revenue,
sum(totals.transactionRevenue) / sum(totals.transactions) AS aov,
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_20170801`
WHERE channelGrouping IN ('Organic Search','Direct')
GROUP BY date, channel
ORDER BY transactions DESC
LIMIT 1000


-- Using GROUP BY in BigQuery to aggregate metrics

SELECT 
date,
channelGrouping AS channel,
sum(totals.visits) AS visits,
sum(totals.transactions) AS transactions,
sum(totals.transactionRevenue) AS revenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_20170801`
WHERE channelGrouping IN ('Organic Search','Direct')
GROUP BY date, channel
ORDER BY transactions DESC
LIMIT 1000

